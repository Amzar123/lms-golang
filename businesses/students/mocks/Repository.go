// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	students "mini-project/businesses/students"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Create provides a mock function with given fields: studentDomain
func (_m *Repository) Create(studentDomain *students.Domain) students.Domain {
	ret := _m.Called(studentDomain)

	var r0 students.Domain
	if rf, ok := ret.Get(0).(func(*students.Domain) students.Domain); ok {
		r0 = rf(studentDomain)
	} else {
		r0 = ret.Get(0).(students.Domain)
	}

	return r0
}

// GetByEmail provides a mock function with given fields: studentDomain
func (_m *Repository) GetByEmail(studentDomain *students.Domain) students.Domain {
	ret := _m.Called(studentDomain)

	var r0 students.Domain
	if rf, ok := ret.Get(0).(func(*students.Domain) students.Domain); ok {
		r0 = rf(studentDomain)
	} else {
		r0 = ret.Get(0).(students.Domain)
	}

	return r0
}

type mockConstructorTestingTNewRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepository creates a new instance of Repository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepository(t mockConstructorTestingTNewRepository) *Repository {
	mock := &Repository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
